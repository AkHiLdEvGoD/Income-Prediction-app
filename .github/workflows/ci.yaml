name: CI Pipeline

on:
  push:
    paths-ignore:
      - 'README.md'
      
jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
          - name: checkout code
            uses: actions/checkout@v3

          - name: setup python
            uses: actions/setup-python@v4
            with:
              python-version: '3.12.1'

          - name: Cache pip dependencies
            uses: actions/cache@v3
            with:
              path: ~/.cache/pip
              key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
              restore-keys: |
                ${{ runner.os }}-pip-

          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt

          - name: Create .env file
            run: |
              echo "DATA_DIR=${{ secrets.DATA_DIR }}" >> .env
              echo "ARTIFACTS_DIR=${{ secrets.ARTIFACTS_DIR }}" >> .env
              echo "DATA_URL=${{ secrets.DATA_URL }}" >> .env
              echo "RAW_DATA_PATH=${{ secrets.RAW_DATA_PATH }}" >> .env
              echo "CLEANED_DATA_PATH=${{ secrets.CLEANED_DATA_PATH }}" >> .env
              echo "FEATURED_DATA_PATH=${{ secrets.FEATURED_DATA_PATH }}" >> .env
              echo "PROCESSED_DATA_PATH=${{ secrets.PROCESSED_DATA_PATH }}" >> .env
              echo "MODEL_PATH=${{ secrets.MODEL_PATH }}" >> .env
              echo "TEST_DATA=${{ secrets.TEST_DATA }}" >> .env
              echo "MODEL_INFO_PATH=${{ secrets.MODEL_INFO_PATH }}" >> .env
              echo "PREPROCESSOR_PATH=${{ secrets.PREPROCESSOR_PATH }}" >> .env
              echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.DAGSHUB_TOKEN }}" >> .env
              echo "MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI }}" >> .env
              echo "DAGSHUB_REPO_NAME=${{ secrets.DAGSHUB_REPO_NAME }}" >> .env
              echo "DAGSHUB_USERNAME=${{ secrets.DAGSHUB_USERNAME }}" >> .env


          - name: Install DVC and DagsHub Support
            run: |
              pip install "dvc[http]" dagshub

          - name: Set up DVC remote authentication
            run: |
              dvc remote modify dagshub --local auth basic
              dvc remote modify dagshub --local user ${{ secrets.DAGSHUB_USERNAME }}
              dvc remote modify dagshub --local password ${{ secrets.DAGSHUB_TOKEN }}

          - name: Pull DVC data
            run: dvc pull

          - name: run pipeline
            env:
              MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
              MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
              DAGSHUB_REPO_NAME: ${{ secrets.DAGSHUB_REPO_NAME }}
              DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
            run: |
              dvc repro
